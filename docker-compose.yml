services:

  #Redis
  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
    - "6379:6379"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  ws_listener:
    build: .
    container_name: ws_listener
    command: python realtime/ws_listener.py
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
  
  #Database
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/posgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
  
  # Django Application
  web:
    build: 
      context: .
    volumes:
      - .:/trader
    ports:
      - 8000:8000
    image: trader:trader
    container_name: trader_web
    command: "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - redis
      - db
      - ws_listener

  #Celery
  celery:
    restart: always
    build:
      context: .
    command: "celery -A trader worker -l info"
    volumes:
      - .:/trader
    container_name: celery_container
    depends_on:
    - redis
    - web

  celery_worker:
      build: .
      container_name: trader_celery_worker
      command: celery -A trader worker --loglevel=info
      depends_on:
        - redis
        - web
      env_file:
        - .env

  celery_beat:
      build: .
      container_name: trader_celery_beat
      command: celery -A trader beat --loglevel=info
      depends_on:
        - redis
        - web
        - celery_worker
      env_file:
        - .env    

  
  



    